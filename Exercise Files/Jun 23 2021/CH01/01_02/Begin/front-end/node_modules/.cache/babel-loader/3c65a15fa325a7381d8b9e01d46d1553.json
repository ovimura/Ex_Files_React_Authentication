{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\Ex_Files_React_Authentication\\\\Exercise Files\\\\Jun 23 2021\\\\CH01\\\\01_02\\\\Begin\\\\front-end\\\\src\\\\pages\\\\UserInfoPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserInfoPage = () => {\n  _s();\n  // We'll use the history to navigate the user\n  // programmatically later on (we're not using it yet)\n  const history = useHistory();\n\n  // These states are bound to the values of the text inputs\n  // on the page (see JSX below). \n  const [favoriteFood, setFavoriteFood] = useState('');\n  const [hairColor, setHairColor] = useState('');\n  const [bio, setBio] = useState('');\n\n  // These state variables control whether or not we show\n  // the success and error message sections after making\n  // a network request (see JSX below).\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n  // This useEffect hook automatically hides the\n  // success and error messages after 3 seconds when they're shown.\n  // Just a little user interface improvement.\n  useEffect(() => {\n    if (showSuccessMessage || showErrorMessage) {\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n        setShowErrorMessage(false);\n      }, 3000);\n    }\n  }, [showSuccessMessage, showErrorMessage]);\n  const saveChanges = async () => {\n    // Send a request to the server to\n    // update the user's info with any changes we've\n    // made to the text input values\n    console.log(history);\n    alert('Save functionality not implemented yet');\n  };\n  const logOut = () => {\n    // We'll want to log the user out here\n    // and send them to the \"login page\"\n    alert('Log out functionality not implemented yet');\n  };\n  const resetValues = () => {\n    // Reset the text input values to\n    // their starting values (the data we loaded from the server)\n    alert('Reset functionality not implemented yet');\n  };\n\n  // And here we have the JSX for our component. It's pretty straightforward\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Info for ______\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: \"Successfully saved user data!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 36\n    }, this), showErrorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fail\",\n      children: \"Uh oh... something went wrong and we couldn't save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Favorite Food:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setFavoriteFood(e.target.value),\n        value: favoriteFood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Hair Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setHairColor(e.target.value),\n        value: hairColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Bio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setBio(e.target.value),\n        value: bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveChanges,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetValues,\n      children: \"Reset Values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logOut,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(UserInfoPage, \"XDTIgfSke54vkO1JVqmnDVHnLvI=\", false, function () {\n  return [useHistory];\n});\n_c = UserInfoPage;\nvar _c;\n$RefreshReg$(_c, \"UserInfoPage\");","map":{"version":3,"names":["useState","useEffect","useHistory","jsxDEV","_jsxDEV","UserInfoPage","_s","history","favoriteFood","setFavoriteFood","hairColor","setHairColor","bio","setBio","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","setTimeout","saveChanges","console","log","alert","logOut","resetValues","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/repos/Ex_Files_React_Authentication/Exercise Files/Jun 23 2021/CH01/01_02/Begin/front-end/src/pages/UserInfoPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const UserInfoPage = () => {\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [favoriteFood, setFavoriteFood] = useState('');\n    const [hairColor, setHairColor] = useState('');\n    const [bio, setBio] = useState('');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        // Send a request to the server to\n        // update the user's info with any changes we've\n        // made to the text input values\n        console.log(history);\n        alert('Save functionality not implemented yet');\n    }\n\n    const logOut = () => {\n        // We'll want to log the user out here\n        // and send them to the \"login page\"\n        alert('Log out functionality not implemented yet');\n    }\n    \n    const resetValues = () => {\n        // Reset the text input values to\n        // their starting values (the data we loaded from the server)\n        alert('Reset functionality not implemented yet');\n    }\n    \n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1>Info for ______</h1>\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <label>\n                Favorite Food:\n                <input\n                    onChange={e => setFavoriteFood(e.target.value)}\n                    value={favoriteFood} />\n            </label>\n            <label>\n                Hair Color:\n                <input\n                    onChange={e => setHairColor(e.target.value)}\n                    value={hairColor} />\n            </label>\n            <label>\n                Bio:\n                <input\n                    onChange={e => setBio(e.target.value)}\n                    value={bio} />\n            </label>\n            <hr />\n            <button onClick={saveChanges}>Save Changes</button>\n            <button onClick={resetValues}>Reset Values</button>\n            <button onClick={logOut}>Log Out</button>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}