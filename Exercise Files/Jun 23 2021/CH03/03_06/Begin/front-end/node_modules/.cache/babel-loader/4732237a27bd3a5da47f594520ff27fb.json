{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\Ex_Files_React_Authentication\\\\Exercise Files\\\\Jun 23 2021\\\\CH03\\\\03_06\\\\Begin\\\\front-end\\\\src\\\\pages\\\\PasswordResetLandingPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { PasswordResetSuccess } from './PasswordResetSuccess';\nimport { PasswordResetFail } from './PasswordResetFail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PasswordResetLandingPage = () => {\n  _s();\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isFailure, setIsFailure] = useState(false);\n  const [passwordValue, setPasswordValue] = useState('');\n  const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n  const {\n    passwordResetCode\n  } = useParams();\n  const onResetClicked = async () => {\n    try {\n      await axios.put(`/api/users/${passwordResetCode}/reset-password`, {\n        newPassword: passwordValue\n      });\n      setIsSuccess(true);\n    } catch (e) {\n      setIsFailure(true);\n    }\n  };\n  if (isFailure) return /*#__PURE__*/_jsxDEV(PasswordResetFail, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 27\n  }, this);\n  if (isSuccess) return /*#__PURE__*/_jsxDEV(PasswordResetSuccess, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: passwordValue,\n      onChange: e => setPasswordValue(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmPasswordValue,\n      onChange: e => setConfirmPasswordValue(e.target.value),\n      placeholder: \"Confirm Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !passwordValue || !confirmPasswordValue || passwordValue !== confirmPasswordValue,\n      onClick: onResetClicked,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(PasswordResetLandingPage, \"Qdb+9AycH78Ck0AlCY960+4G/i8=\", false, function () {\n  return [useParams];\n});\n_c = PasswordResetLandingPage;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetLandingPage\");","map":{"version":3,"names":["useState","useParams","axios","PasswordResetSuccess","PasswordResetFail","jsxDEV","_jsxDEV","PasswordResetLandingPage","_s","isSuccess","setIsSuccess","isFailure","setIsFailure","passwordValue","setPasswordValue","confirmPasswordValue","setConfirmPasswordValue","passwordResetCode","onResetClicked","put","newPassword","e","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","value","onChange","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/repos/Ex_Files_React_Authentication/Exercise Files/Jun 23 2021/CH03/03_06/Begin/front-end/src/pages/PasswordResetLandingPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { PasswordResetSuccess } from './PasswordResetSuccess';\nimport { PasswordResetFail } from './PasswordResetFail';\n\nexport const PasswordResetLandingPage = () => {\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [isFailure, setIsFailure] = useState(false);\n    const [passwordValue, setPasswordValue] = useState('');\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n    const { passwordResetCode } = useParams();\n\n    const onResetClicked = async () => {\n        try {\n            await axios.put(`/api/users/${passwordResetCode}/reset-password`, { newPassword: passwordValue });\n            setIsSuccess(true);\n        } catch (e) {\n            setIsFailure(true);\n        }\n    }\n\n    if (isFailure) return <PasswordResetFail />\n    if (isSuccess) return <PasswordResetSuccess />\n\n    return (\n        <div className=\"content-container\">\n            <h1>Reset Password</h1>\n            <p>Please enter a new password</p>\n            <input\n                type='password'\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"Password\" />\n            <input\n                type='password'\n                value={confirmPasswordValue}\n                onChange={e => setConfirmPasswordValue(e.target.value)}\n                placeholder=\"Confirm Password\" />\n            <button\n                disabled={!passwordValue || !confirmPasswordValue || passwordValue !== confirmPasswordValue}\n                onClick={onResetClicked}\n            >Reset Password</button>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}